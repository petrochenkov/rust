error: dstats. parent: Other, stmts: ZeroWithTail, args_match: Same, ret_match: Different, callee_has_self: true, caller_has_self: false, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:101:9
   |
LL | /     fn foo<'a>(f: &F<'a>) -> &'a dyn Display {
LL | |         f.foo()
   | |         ^^^^^^^ callee
LL | |
LL | |     }
   | |_____- caller
   |
note: the lint level is defined here
  --> $DIR/signature.rs:1:9
   |
LL | #![deny(delegations_detailed, delegations_per_parent_stats)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: Same, ret_match: Same, callee_has_self: false, caller_has_self: true, same_name: false, ret_postproc: false.
  --> $DIR/signature.rs:20:9
   |
LL | /     fn foo(&mut self) -> Self {
LL | |         Self(self.0.foo())
   | |         ^^^^^^^^^^^^^^^^^^ callee
LL | |
LL | |
LL | |     }
   | |_____- caller

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: Same, ret_match: SameUpToSelfType, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: true.
  --> $DIR/signature.rs:20:14
   |
LL | /     fn foo(&mut self) -> Self {
LL | |         Self(self.0.foo())
   | |              ^^^^^^^^^^^^ callee
LL | |
LL | |
LL | |     }
   | |_____- caller

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: Same, ret_match: Same, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:26:9
   |
LL | /     fn bar(&self) -> i32 {
LL | |         self.0.bar()
   | |         ^^^^^^^^^^^^ callee
LL | |
LL | |     }
   | |_____- caller

error: dstats. parent: TraitImpl, stmts: OneWithoutTail, args_match: Same, ret_match: Same, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:33:9
   |
LL | /     fn hash<H: Hasher>(&self, state: &mut H) {
LL | |         self.0.hash(state);
   | |         ^^^^^^^^^^^^^^^^^^ callee
LL | |
LL | |     }
   | |_____- caller

error: dstats. parent: TraitImpl, stmts: ZeroWithTail, args_match: Different, ret_match: Same, callee_has_self: false, caller_has_self: true, same_name: false, ret_postproc: false.
  --> $DIR/signature.rs:42:9
   |
LL | /     fn add(self, other: Self) -> Self {
LL | |         Self (self.0.add(other.0))
   | |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ callee
LL | |
LL | |
LL | |     }
   | |_____- caller

error: dstats. parent: TraitImpl, stmts: ZeroWithTail, args_match: SameUpToSelfType, ret_match: SameUpToSelfType, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: true.
  --> $DIR/signature.rs:42:15
   |
LL | /     fn add(self, other: Self) -> Self {
LL | |         Self (self.0.add(other.0))
   | |               ^^^^^^^^^^^^^^^^^^^ callee
LL | |
LL | |
LL | |     }
   | |_____- caller

error: dstats. parent: TraitImpl, stmts: ZeroWithTail, args_match: Same, ret_match: Same, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:60:13
   |
LL | / ...   fn next(&self) -> Option<T::Item> {
LL | | ...       (**self).next()
   | |           ^^^^^^^^^^^^^^^ callee
LL | | ...
LL | | ...   }
   | |_______- caller

error: dstats. parent: TraitImpl, stmts: ZeroWithTail, args_match: Same, ret_match: Same, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:64:13
   |
LL | / ...   fn last(&self) -> Option<Self::Item> {
LL | | ...       (**self).last()
   | |           ^^^^^^^^^^^^^^^ callee
LL | | ...
LL | | ...   }
   | |_______- caller

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: Different, ret_match: Different, callee_has_self: false, caller_has_self: false, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:80:13
   |
LL | / ...   pub fn new() -> Box<dyn Trait> {
LL | | ...       Box::new(Struct)
   | |           ^^^^^^^^^^^^^^^^ callee
LL | | ...
LL | | ...   }
   | |_______- caller

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: Same, ret_match: Same, callee_has_self: false, caller_has_self: false, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:85:13
   |
LL | / ...   pub fn bar() -> impl Trait {
LL | | ...       bar()
   | |           ^^^^^ callee
LL | | ...
LL | | ...   }
   | |_______- caller

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: SameNumber, ret_match: Same, callee_has_self: true, caller_has_self: true, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:119:13
   |
LL | / ...   fn foo(&self, str: &mut str) {
LL | | ...       self.0.foo(str)
   | |           ^^^^^^^^^^^^^^^ callee
LL | | ...
LL | | ...   }
   | |_______- caller

error: dstats. parent: InherentImpl, stmts: ZeroWithTail, args_match: Same, ret_match: Different, callee_has_self: false, caller_has_self: false, same_name: true, ret_postproc: false.
  --> $DIR/signature.rs:124:13
   |
LL | / ...   fn bar(x: &u32) -> &dyn Display {
LL | | ...       F::bar(x)
   | |           ^^^^^^^^^ callee
LL | | ...
LL | | ...   }
   | |_______- caller

error: delegation methods stats. methods_count: 1, 5.
   |
note: the lint level is defined here
  --> $DIR/signature.rs:1:31
   |
LL | #![deny(delegations_detailed, delegations_per_parent_stats)]
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: delegation methods stats. methods_count: 2, 2.

error: aborting due to 15 previous errors

