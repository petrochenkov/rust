error: caller_parent: Other, stmts_before: false, arg0_match: Same, arg0_preproc: No, args_match: Same, args_preproc: No, ret_match: Same, has_self: false, caller_has_self: false, same_name: false, ret_postproc: false, parent: InherentImpl, source: User
  --> $DIR/self.rs:30:5
   |
LL | / fn foo<T>(x: T) -> T {
LL | |     F::bar::<T>(x)
   | |     ^^^^^^^^^^^^^^ callee
LL | |
LL | | }
   | |_- caller
   |
note: the lint level is defined here
  --> $DIR/self.rs:1:9
   |
LL | #![deny(delegations_detailed, delegations_per_parent_stats)]
   |         ^^^^^^^^^^^^^^^^^^^^

error: caller_parent: Other, stmts_before: false, arg0_match: Different, arg0_preproc: Other, args_match: DifferentCount, args_preproc: Other, ret_match: Different, has_self: true, caller_has_self: false, same_name: false, ret_postproc: true, parent: InherentImpl, source: User
  --> $DIR/self.rs:35:5
   |
LL | / fn bar(x: i32) {
LL | |     F::get_self().foo::<i32>(x);
   | |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ callee
LL | |
LL | |
LL | | }
   | |_- caller

error: caller_parent: Other, stmts_before: false, arg0_match: Different, arg0_preproc: Other, args_match: DifferentCount, args_preproc: Other, ret_match: Different, has_self: false, caller_has_self: false, same_name: false, ret_postproc: true, parent: InherentImpl, source: User
  --> $DIR/self.rs:35:5
   |
LL | / fn bar(x: i32) {
LL | |     F::get_self().foo::<i32>(x);
   | |     ^^^^^^^^^^^^^ callee
LL | |
LL | |
LL | | }
   | |_- caller

error: caller_parent: Trait, stmts_before: false, arg0_match: Same, arg0_preproc: No, args_match: Same, args_preproc: No, ret_match: Same, has_self: false, caller_has_self: false, same_name: true, ret_postproc: false, parent: Other, source: User
  --> $DIR/self.rs:42:9
   |
LL | /     fn foo<T>(x: T) -> T {
LL | |         foo(x)
   | |         ^^^^^^ callee
LL | |
LL | |     }
   | |_____- caller

error: caller_parent: InherentImpl, stmts_before: false, arg0_match: Same, arg0_preproc: No, args_match: Same, args_preproc: No, ret_match: Same, has_self: false, caller_has_self: false, same_name: true, ret_postproc: false, parent: InherentImpl, source: User
  --> $DIR/self.rs:19:9
   |
LL | /     fn bar<T>(x: T) -> T {
LL | |         F::bar::<T>(x)
   | |         ^^^^^^^^^^^^^^ callee
LL | |
LL | |     }
   | |_____- caller

error: caller_parent: InherentImpl, stmts_before: false, arg0_match: Different, arg0_preproc: Field, args_match: Same, args_preproc: No, ret_match: Same, has_self: true, caller_has_self: true, same_name: true, ret_postproc: false, parent: InherentImpl, source: User
  --> $DIR/self.rs:24:9
   |
LL | /     fn foo<T>(self, x: T) -> T {
LL | |         self.field.foo::<T>(x)
   | |         ^^^^^^^^^^^^^^^^^^^^^^ callee
LL | |
LL | |     }
   | |_____- caller

error: delegation count: 1, parent count: 2
   |
note: the lint level is defined here
  --> $DIR/self.rs:1:31
   |
LL | #![deny(delegations_detailed, delegations_per_parent_stats)]
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: delegation count: 2, parent count: 1

error: aborting due to 8 previous errors

